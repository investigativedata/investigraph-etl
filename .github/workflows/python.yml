# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python test and package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  pytest:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install poetry
      run: curl -sSL https://install.python-poetry.org | python3 -
    - name: Configure poetry
      run: poetry config virtualenvs.in-project true
    - name: Set up cache
      uses: actions/cache@v1
      id: cache
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Ensure cache is healthy
      if: steps.cache.outputs.cache-hit == 'true'
      run: poetry run pip --version >/dev/null 2>&1 || rm -rf .venv
    - name: Install dependencies
      run: poetry install --with dev
    - name: Lint with flake8
      run: make lint
    - name: Test with pytest
      run: make test
    - name: Test building
      run: poetry build
